{"version":3,"sources":["../node_modules/typed.js/src/defaults.js","../node_modules/typed.js/src/initializer.js","../node_modules/typed.js/src/html-parser.js","../node_modules/typed.js/src/typed.js","js/index.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["defaults","strings","stringsElement","typeSpeed","startDelay","backSpeed","smartBackspace","shuffle","backDelay","fadeOut","fadeOutClass","fadeOutDelay","loop","loopCount","Infinity","showCursor","cursorChar","autoInsertCss","attr","bindInputFocusEvents","contentType","onBegin","self","onComplete","preStringTyped","arrayPos","onStringTyped","onLastStringBackspaced","onTypingPaused","onTypingResumed","onReset","onStop","onStart","onDestroy","Initializer","load","options","elementId","el","document","querySelector","isInput","tagName","toLowerCase","cursorBlinking","elContent","getAttribute","textContent","isPaused","map","s","trim","style","display","Array","prototype","slice","apply","children","stringsLength","length","i","stringEl","push","innerHTML","strPos","stopNum","curLoop","sequence","pause","status","typewrite","curString","curStrPos","typingComplete","currentElContent","getCurrentElContent","appendAnimationCss","value","cssDataName","css","createElement","type","setAttribute","innerCss","body","appendChild","initializer","HTMLParser","typeHtmlChars","curChar","substr","charAt","endTag","backSpaceHtmlChars","htmlParser","Typed","constructor","begin","toggle","start","stop","toggleBlinking","backspace","destroy","reset","restart","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","insertCursor","shuffleStringsIfNeeded","bindFocusEvents","setTimeout","classList","contains","remove","humanize","humanizer","numChars","setPauseStatus","pauseTime","test","skip","exec","parseInt","temporaryPause","substring","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","nextString","complete","initFadeOut","curStringAtPosition","isTyping","isBlinking","add","speed","Math","round","random","sort","className","str","addEventListener","e","insertBefore","nextSibling","mouseCursor","window","top","pageY","left","pageX","linksGrow","projectLinks","querySelectorAll","forEach","link","skills","socialLinks","navLinks","list","menuBtn","typed","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","newLink","cloneNode","onload","href","split","Date","now","cssTimeout","reloadCSS","links","module"],"mappings":"AKAA,ACAA,IDAI2K,ACAAY,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;;ADCA,ACCA,AFFA,SCCSZ,ACCAa,UAAT,CAAoBrB,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,MDDI,ACCAsB,CDDCf,MCCM,GDDX,ACCcP,EDDE,ECCE,CAACuB,SAAL,EAAd;ADAEhB,ADFJ,ICEIA,SAAS,GAAGE,YAAY,EAAxB;AACD,ACADa,EAAAA,OAAO,CAACE,MAAR,GAAiB,YAAY;AAC3BxB,IAAAA,IAAI,CAAC7C,MAAL;ADCF,ACAC,ANNH,AEAA,ADAA,AEAA,GGIE,MDEOoD,SAAP;AACD,ADJD;AEIEe,AHNF,ACGA,EEGEA,EFHEhC,KEGK,CAACmC,IAAR,CFHa,EEGEzB,CFHC7H,GEGG,CAACsJ,IAAL,AFHS,CEGCC,AFHAtJ,KEGV,CAAgB,GAAhB,EAAqB,CAArB,CFHC,CAAuB,EEGE,GAA1B,GAAgCuJ,CFH/B,CAAlB,EEGqD,CAACC,GAAL,EAA/C;ADEF,ACDE5B,AFHFT,EEGES,IAAI,AFHA,CEGCrD,AFHAuC,ECIEuB,QCDP,CAAgBrB,GDClB,EDJA,CCIwB,ADJA,MEGtB,CAA6BkC,IFH/B,EAAqC,CEGnC,EAAsCtB,IAAI,CAACX,EFHPF,CAAD,EAAO,MEG1C;ADEA,ACDD,AJJc,ADJf,AEEA,ACGEG,EAAAA,IFDmBlE,OECR,CAACpC,EFDC,CAAiB,EEC9B,CAAkBwG,GAAlB,GAAwBL,CAAC,CAACM,KAAF,GAAU,IAAlC;ACKA,ALLF,AEAE,AECAH,EAAAA,ICII,ALLA1J,OICO,CJDC,AICAoD,GJDG,EICf,CAAkB0G,IAAlB,GAAyBP,CAAC,CAACQ,KAAF,GAAU,IAAnC,CAF0C,CAG1C;ACIE,ACDJ,ANJE,AIED,CAJD,GEMIkC,MDCM,IAAInB,ACDA,GAAG,EDCP,EAAN,ACDJ;ADEG,AJRY,AGMf,GCAE,CAEE,ADFAd,EHNiB9H,KIQV6I,EDFE,CCET,EAAY,ADFA,CHND,CAAkB,AGMjC;ACGI,ACFJ,ALNE,AGMFf,QCEQgB,CCFCkB,AFAA,CAACnI,IAAV,CCEe,ADFAxB,GCEG,ACFlB,CDEmB,ECFE,EFAE,CCECwI,ADFAvI,GCEG,CAACyI,KAAV,EAAiBC,EDFpB,CAAuB,ECEpB,CAAuB,MDF1B,CAAf,wDCEkB,CAAd;ACDF,AFAF,IAAIjB,EEAEgC,UAAJ,AFAc,EEAE,CFAC1J,QAAQ,CAAC2H,gBAAT,CAA0B,YAA1B,CAAnB;ACEI,ACDA,ANHFjK,AGFa,ACKfgK,EJHEhK,IGFmB+F,EEMbgF,CLJC,EAAE,AGFI,CHGX,AGHuB,ACKf,CAACb,ECCT,EAAa,GDDjB,CAAqB,UAACC,IAAD,EAAU,QJHpB,EAEP,8BAFO,EAGP,eAHO,EAIP,mBAJO,CALM;AKUX,ACDH,ANEDlK,AGPA+F,ACKA+D,EJEA9J,AGPA+F,ACKA+D,SAAS,CAACjG,CCCCoH,AFNA,CAAC9I,EHOE,AIFd,CAAe+H,CJEC,GIFhB,CJTe,CKUM,AFNV,CEMWY,CFNC5I,MEMM,CAAC,AFNnB,CEMkB,CAAR,AFNW,CEM5B;AACD,AFND,ACKH,CAFD;ACIG,ACDD6J,ANEA,AEJAxG,ACHEF,ACKJ,EEAE0G,AJFAxG,EEEE4E,MAAM,EEAE,CFAC9H,EEAE6E,AJFA,CAAC5C,KEEK,CAAC0F,GEAG,AJFV,CIEW,CJFCzF,ECHXtC,IAAZ,CAAiB,EDGN,EIEuB,AJFAb,ACHlC,ACKS,CAA0B,CDLZc,EDGZ,EAA6B,CEE/B,CAAb,CDLI,EAAgCC,SAAhC,EAF8B,CAG9B;AGKA,AJFA,AEEJgI,MAAM,CAACF,CEACgC,AJFA7K,IAAI,CIEC,AJFAF,CEEb,CAAe,CEACmB,QAAQ,AJFhB,CIEiB2H,AFATE,IFFa,AEEd,EAAU,IFFrB,EAAiC,IIErB,CAA0B,EJFE3F,SAAP,aIErB,CAAZ;ADEF,AHHE,ADHFtC,AGKA6H,EHLA7H,AGKA6H,IHLI,CAAC1I,EIME,CHHCoE,CDHJ,AGKK,CCCT,ADDU3B,CHLC3B,GGKX,CFFe,AEEAgI,GFFG5F,ADHd,CGKJ,CHLoBnC,OCGO,CAACsD,CDHxB,EAA2B,GCGb,CAAiBlB,SAAjB,EAA4BmB,MAA5B,CAAmC,CAAnC,CAAhB;AGIH,ACFG,ANGFzF,ACPE,AEDA,ACMH,CAFD,CJIEA,OMHO,AHLA+F,EHQE,EMHErC,ANGA,CMHC,ANbG,AGQb,GGKa,CAAb,EAAgBA,CAAC,GAAGsI,KAAK,CAACvI,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACrC,AJFF,ADFA,AEDD,ACMH,IAAIyG,IFHI5E,ADFA,EKIE6F,KJFK,ADFAlJ,AGKA,CEDC,CAAC8I,CFCC5I,EFHE,GAAZ,CDFA,EGKkB,CEDhB,AJFiBmD,AEGAwE,CEDCiC,CLJC,IKII,CAACtI,AJFA,CIED,CAAL,CAASgI,ALJjC,ECEmC,ADFA,EKI7B,CJFN,CEGc,CFH0B,AEGA,GEDGN,MAAM,CAACV,QFCpC,CAAlB,GED+C,EAAzC,EAAgE;ADGtE,ACFQY,ANGN,AELI,ADFAnK,AEAJ,ACKFgJ,MHLMhJ,EKIEmK,CDECN,CHJCtF,ADFA,CAACvD,AGKA,CAAC6H,CHLN,GCEU,ADFA5H,EKIE,CDElB,ACFmB4J,AJFA,AEGnB,CCCoBf,ADDA,CFHd,EGIN,CCFwB,ALJA,CIMC,ACFAvH,ALJArB,CKID,CAAN,CAAV,EFCa4H,IAAD,EAAU,EHLd,CAAuB/H,SAAvB,CAAV;AIOJ,ACFK,ALJF,AGKH2H,EAAAA,GHPE,IIQK,CAAC,CJNC,AGKA,CAACjG,GCCGqH,CDDb,CAAehB,CCCR,EAAWiB,CDDlB,MCCO,CAAmB,sEAAnB,EAA2F,IAA3F,IAAmG,GAA1G;AACD,ACFI,AJHC,ADDA/J,AGKL,CAFD,GAGA,EHNMA,ICCIoE,ADDA,CAACpD,EAAL,GAAUD,CCCC,KAAK,GAAhB,ADDA,ECCqB;AFOzBjC,AENMyF,ADDH,EDOHzF,MENMyF,IFMI,EAAE,AENA,CFfG,EEeA,GAAT;AGMRyF,ACFIW,AJHG,AEIP,IEDIA,AFCA1B,GCCG,AHPD,CGOEM,IDDI,CFJC,CIGC,CFCCtI,EEDE,GDEjB,CCFI,EDEmBqI,ADDA,CAACV,gBAAT,CCCf,ADDyC,aAA1B,CAAf;ACEAoB,ACFG,ANGD,AENMzF,ADDJvE,AGKJiJ,GEVyB,CLKrBjJ,CKIC,EDEE,ACXkB,CDWjB6J,ACXN,AJMMtF,ADDA,AGKA,CHLCzD,AGKA+H,KFJK,EDDV,AGKJ,CFJiB,AEIA,CCCjB,CJNmB,CCCX,CGKagB,AJNA,GAAGnL,GGKNoK,ICClB,ADDiB,EAAU,QHLR;AKKlB,AJHM,ADF2B,AEDhCjE,ACOA6D,EDPA7D,ACOA6D,MDPM,CFC6B5H,EED1B,ACOA,CAAC2B,IAAV,CAAeqG,IAAf;AHNiB,AEAf,ACOH,CAFD,GAIA,CHTI,CAR6B,CAU7B,EEFK/F,KAAL,CAAWC,MAAX,GAAoB,KAAK8B,KAAL,EAApB,GAAmC,KAAKC,IAAL,EAAnC;AGOJ+F,ANGE/L,AEPI,ACFH,EHSDA,IMHI,CAACiL,INGI,EAAE,AEPA9G,CIIb,ANvBiB,GMuBA0H,KJJK,CAACvG,GIIvB,GJJa,CAAiBlB,SAAS,GAAG,CAA7B,EAAgCmB,MAAhC,CAAuC,CAAvC,MAA8CC,MAArD,EAA6D;AAC3DpB,ADDJnD,AEAF,ACOF0I,IHPI1I,ICCImD,ADDA,CAAChC,AGOA,CAAC0H,MHPN,CCCa,AEMjB,CAAkB,CHPC7I,IAAI,CAACgB,EAAL,CAAQI,CGOR8H,IAAD,EHPC,AGOS,CHPO7H,WAAhB,OAAkC,OAAjD;ADSF,ACRErB,AGOFkJ,EAAAA,EHPElJ,EGOE,CAACgI,CHPC,CAACpI,IAAL,GAAYI,IAAI,CAACc,EGOnB,CAAsB,IHPR,CAAalB,IAAzB,GGOF,EAAoC,YAAM;AFNpC,ADAJI,AGOAoI,IHPApI,AGOAoI,IHPI,CAACvI,GCAGsD,GEOG,CAAC4C,KFPK,GAAG,CAAZ,AEOR,CAAsBE,EFPE/C,CDAxB,GAA4BlD,AGO5B,CAA6B,GHPG,CCAC,ADAAc,CCACwB,CEOlC,KFPI,ADAwB,CAAazC,CCAC,mBDA1C,CAb6B,CAe7B;ACDM,AEOP,GAFD;AJIAb,AERO,ADCLgB,AGMFkJ,EJCAlK,AIDAkK,EHNElJ,EGME,CAACgI,CHNC,CAACvI,ODOO,EAAE,CCPd,GDxBa,ACwBKO,CGMpB,CAAsB,EHNE,CAACmB,OAAL,CGMpB,EHNmC,AGMA,KHNf,GAAuBnB,IAAI,AGMN,CHNOc,OAAL,CAAarB,UAAtD,CAhB6B,CAkB7B;ACFG,AEOH2I,IAAAA,WAAW,CAACrC,SAAZ,CAAsByB,GAAtB,CAA0B,MAA1B;AJEF,ACNExH,AEJF+E,ACSC,EDTDA,CCOA,CHHE/E,EEJE,EFIE,CAACN,AEJA,UFIL,GAAkBM,IAAI,CAACc,OAAL,CAAapB,UAA/B,CAnB6B,CAqB7B;ACJEyD,ACDF,ACSH,CAPD,GASA,EFVMA,ECDE,KAAKC,EDCE,YCDX,EAAyB;ADExB,ADIDpD,AELA,IFKAA,IAAI,AELA,CFKCsB,IELIyB,KAAL,CAAWC,IFKf,EELA,CFKsB,CELC,GFKvB,CAtB6B,CAwB7B;ADIF/D,AGVE,ACUJ,EJAEA,EIAIkK,KJAG,AGVAnE,EHUE,AIAE,GAAG/D,EJpCC,MIoCO,CDVpB,ACUqBC,CDVD,IAApB,QCUY,CAAuB,SAAvB,CAAhB;AFTI,ADMAlB,AENA,ACUJmJ,IHJInJ,GGIG,CHJC,AGIAgI,CHJCzG,AENAwB,EDAEI,GCAP,CAAWH,GFMX,ECNA,CDMiBhD,AENjB,GAAoB,ACUxB,CHJyB,AGIA,CHJCJ,EENtB,EFMiB,EGIrB,CHHQI,CGG0B,GHHtB,CAACgB,EAAL,CAAQQ,KGGwB,OHHhC,CAAqBxB,IAAI,CAACJ,IAA1B,CADa,GAEbI,IAAI,CAACgB,EAAL,CAAQS,WAFZ,CAzB6B,CA6B7B;ADCF,AEVC,ACAC,ACUF0H,EAAAA,ODVOrI,ACUA,CAACiF,MDVN,CAAatF,ECUf,CAAkBoE,GDVhB,CAAoB,ECUtB,CAAyB,EDVE1E,MCU3B,EDVE,EAAmC,IAAnC;ADEF,ADQEH,AETD,ACUDiB,EAAAA,EHDEjB,IAAI,CAACF,CGCC,CAACoB,SHDP,GAAmBlB,CGCrB,CAAuB,EHDE,CAACc,OAAL,CAAahB,CGClC,EAAqCiG,QHDnC,CA9B6B,AG+B/B,CHCE,AGD6ClB,MAA/C,CAAsD,MAAtD;ADRA,ACSD,CAHD,GAIA;AJAE3F,ACAEc,EDAFd,ECAEc,IAAI,CAACnB,EDAE,EAAE,GAzCI,ECyCb,GAAiBmB,IAAI,CAACc,OAAL,CAAajC,SAA9B,CAjC6B,CAmC7B;AGDJ,IAAIuK,KAAK,GAAG,IAAI1E,cAAJ,CAAU,OAAV,EAAmB;AJC7B,ACCE1E,AGDFrB,EAAAA,EHCEqB,IAAI,CAAClB,AGDA,EAAE,CAAC,OHCR,GAAkBkB,IAAI,CAACc,CGDhB,EAAmB,IHCR,CAAahC,UAA/B,CApC6B,CAsC7B,GGHO,EAAyC,YAAzC,EAAuD,WAAvD,CADoB;AAE7BD,EAAAA,SAAS,EAAE,GAFkB;AHK3BmB,AGFFjB,EAAAA,EHEEiB,IAAI,CAACjB,EGFE,EAAE,EAHkB,GHK3B,GAAiBiB,IAAI,CAACc,OAAL,CAAa/B,SAA9B,CAvC6B,CAyC7B;AEdF+F,ACWAxF,EDXAwF,ACWAxF,IAAI,CDXC,CCWC,EDXE;AFeNU,AEdA,ACM2B,CAAnB,CAAZ,EHQIA,IAAI,AEdA,CFcChB,IEdIoE,UFcT,GAAsBpD,CEdtB,EAAyB,CFcC,CAACc,OAAL,CAAa9B,cAAnC,CA1C6B,CA4C7B;ADJFG,AGXE,EHWFA,MGXM,CHWC,AGXA,EHWE,GGXG4D,EHrCG,GGqCR,CAAWC,MAAhB,EAAwB;AHY1B5D,AEXAoF,ADeExE,AEfA,EHWFZ,AEXAoF,EDeExE,IAAI,CAACd,AEfA6D,KHWK,AGXV,CAAWC,CHWC,ECIZ,ECfgB,CAACE,ADeAlD,AEfjB,GAAoB,CFeC,CAACc,GEftB,CDAgB,EFtCH,AEsCeqC,CDeX,CAAajE,OCfd,EAAuBc,ADevC,CA7C6B,CA+C7B,ECjBgB,EAA6B;AFY/CX,AEXE,EFWFA,MEXMW,IAAI,CAACF,CFWC,EAAE,GAlDC,KEuCT,KAAqB,MAAzB,EAAiC,OAAOqD,SAAP;AACjC,ADgBAnD,AEjBA,IFiBAA,IAAI,AEjBA,CFiBCb,CChBCiF,GCDGrB,GFiBT,CChBa,CCDT,CFiBW/C,AEjBAiD,CDCCC,GDgBG,CAACpC,IEjBpB,CDCyB,CAACuD,ACDA,CFiBX,CAAalF,IChBZ,CAAiBgE,EDgBjC,OChBgB,EAA4BmB,MAA5B,CAAmC,CAAnC,CAAhB;AFYF,ACKEtE,AEjBE,IFiBFA,IAAI,CAACZ,EEjBE6D,SAAL,CFiBF,AEjBiB,GFiBGjD,EEjBE+C,EFiBE,CAACjC,EEjBR,CAAWoC,IFiBR,CAAa9D,IEjB/B,EAAqC,KAAK2D,CFiB5C,IEjBuC,CAAWI,SAAhD;ADCF,ADiBAnD,AEjBC,IFiBDA,CEnBA,GDEIoE,ADiBA,CAAC/E,EEjBE,IDAI,KAAK,CDiBhB,ECjBI,CDiBgBW,GCjBGoE,CDiBC,CAACtD,KCjBK,EDiBV,CAAazB,ECjBE,GAAnC,EAAwC,KDiBxC,CAlD6B,CAoD7B;AClBE,ACAA,UDAIkF,CCACU,KDAK,GAAG,CCAb,CDAA,ACAe,KAAKlC,KAAL,CAAWG,SAA1B,EAAqC,KAAKH,KAAL,CAAWI,SAAhD;AFmBFnD,AElBC,IFkBDA,IAAI,CAAC0B,QAAL,GAAgB,KAAhB,CArD6B,CAuD7B;ADPFpC,AEbI,EFaJA,IAAI,EAAE,EEbE8E,GF3CO,IE2CA,KAAK,GAAhB,EAAqB;AFczB7E,AEbMgF,ADoBJvE,AEpBA,EHaFT,ECOES,ICpBIuE,ADoBA,CAAC5F,AEpBAmC,EHaE,EAAEtB,CEbC,EDoBV,AEpBA,CDAa,ACAAkB,EFoBEV,CCpBX,CF5CS,ECgEM,CAACc,AEpBpB,CAAqB,KAAKX,CFoBX,CAAaxB,MEpB5B,CFoBe,CAAqBgD,AEpBA,GFoBrB,CAA0BC,AEpBzC,CFoBwC,IAAOA,CAAC,CAACC,IAAF,EAAhC,CAAf,CAxD6B,CA0D7B;ACrBG,ACAJ,ODFG,MAEO;AFcX,AEbM0C,ADqBJ,AEpBF,QDDMA,ADqBA,MCrBM,CDqBCvE,ECrBE,EDqBE,CCrBX,ADqBYc,OAAL,CAAalC,cAApB,KAAuC,QAA3C,EAAqD;ACpBlD,ADqBDoB,MAAAA,IAAI,CAACpB,cAAL,GAAsBqC,QAAQ,CAACC,aAAT,CAAuBlB,IAAI,CAACc,OAAL,CAAalC,cAApC,CAAtB;AACD,KAFD,MAEO;ACrBL,ADsBAoB,MAAAA,IAAI,CAACpB,ECtBEsE,SAAS,CAACmB,EDsBjB,GAAsBrE,CCtBf,CAAiBmD,EDsBE,CAACrC,MCtBM,CDsBX,CAAalC,CCtBC,CAA7B,EAAgC0F,MAAhC,CAAuC,CAAvC,EDsBP,ICtBqDC,MAArD,EAA6D;AAC3DpB,ADsBH,QCtBGA,SAAS;AFef1D,EAAAA,UAAU,EAAE,IAhEG;AAiEfC,AEfM,ADuBJ,AEtBFwF,EHcAxF,AGdAwF,MFsBMlF,CEtBC,GHcG,AEfAmD,ADuBA,AEtBA,CFsBCvE,CDRC,GAjEG,IEkDI,GAAG,CAAhB,EAAmB,ADuBvB,EAAyB;ADP3Be,AEfQ,ADuBJK,AEtBF,EHcFL,ICQIK,GEtBGmF,CFsBC,CAACxG,GEtBP,CHcW,AGdA,EHcE,CCQX,EEtBF,CHpDa,AC0EI,EAAf;ACtBG,ADuBHqB,AEtBF,MFsBEA,GEtBGc,CFsBC,CAAClC,KEtBP,CAAa+B,QFsBX,CAAoBmB,AEtBtB,CAAuB,IFsBrB,AEtBF,CFsB4BC,OAA1B,GAAoC,MAApC;ADPJ,AEfK,ADuBD,AEtBH,YFsBSpD,OAAO,GAAGqD,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,KAAtB,CAA4BnC,IAAI,CAACpB,cAAL,CAAoBwD,QAAhD,CAAhB;AACA,AErBJ,YFqBUC,aAAa,GAAG1D,OAAO,CAAC2D,MAA9B;ACvBAa,MAAAA,SAAS;AACV,ADwBC,UAAId,aAAJ,EAAmB;ADPvBzC,ACQM,EDRNA,IAAI,EAAE,IAxES,CCgFJ,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAApB,EAAmCE,CAAC,IAAI,CAAxC,EAA2C;ACxB/C,ADyBM,WCzBCY,KDyBKX,ICzBZ,IDyBoB,GAAG7D,OAAO,CAAC4D,CAAD,CAAxB;ADPR,AEjBC,ADyBOvC,UAAAA,IAAI,CAACrB,OAAL,CAAa8D,IAAb,CAAkBD,QAAQ,CAACE,SAAT,CAAmBb,IAAnB,EAAlB;AACD;ACpFuB,ADqFzB,AEvBLsD,EAAAA,KAAK,CAACC,OAAO,GAAG,IAAX,EAAiB;AHgBtBvF,ACQG,AEvBDwF,EHeFxF,EGfEwF,CFtD6B,CA+E7B,WEzBa,CAAC,IHeI,CGfCC,CHeC,KA7EP,CG8DA,CAAb;AACA,SAAKC,WAAL,CAAiB,EAAjB;AHgBF,AEnBK,IAAId,UAAU,GAAG,IAAIP,UAAJ,EAAjB;AD4BHlE,AExBA,IFwBAA,IAAI,AExBA,CFwBC2C,IExBI6C,EFwBT,GAAc,CAAd,AExBI,CFxDyB,CAkF7B,EE1BmB,KAAKA,MAAL,CAAYC,UAA/B,EAA2C;AACzC,WAAKD,MAAL,CAAYC,UAAZ,CAAuBC,WAAvB,CAAmC,KAAKF,MAAxC;AHiBJ1F,ACSEE,AEzBE,EHgBJF,ECSEE,IAAI,CAACG,EEzBEqF,EHgBE,EAAE,ECSX,AEzBE,GFyBc,AEzBA,CHlEH,AC2Fb,CAnF6B,CAqF7B,CE3BE;AACD;AHiBH,ACUExF,IAAAA,IAAI,CAAC4C,OAAL,GAAe,CAAf,CAtF6B,CAwF7B;AE5BA,SAAKD,MAAL,GAAc,CAAd;AF6BA3C,AE5BA,IF4BAA,IAAI,CAACV,AE5BAa,IF4BL,GAAYH,CE5BZ,GF4BgB,AE5BA,CF4BCc,AE5BjB,OF4BY,CAAaxB,IAAzB;AACAU,AE5BA,IF4BAA,IAAI,CAACT,AE5BAsD,OAAL,EF4BA,CE5Be,CAAf,CF4BiB7C,IAAI,CAACc,OAAL,CAAavB,SAA9B;ADVFQ,ACWEC,EDXFD,ECWEC,IAAI,CDXC,ACWA6C,EDXG7C,IAAD,CCWP,GDXiB,ACWF,CDXI,ACWnB,CDnGa,ACQgB,CA6F7B;AE9BA,QAAIoF,OAAJ,EAAa;AHmBf,ACYEpF,AE9BE,IF8BFA,IAAI,CAACf,EE9BE0G,KF8BP,GAAe3F,IAAI,AE9BjB,CF8BkBc,OAAL,CAAa7B,OAA5B,CA9F6B,CA+F7B;AE9BE,WAAK6B,OAAL,CAAaN,OAAb,CAAqB,IAArB;AF+BFR,AE9BE,IF8BFA,IAAI,CAAC8C,EE9BE8B,KAAL,CF8BF,GAAgB,EAAhB;AAEA5E,AE/BC,IF+BDA,IAAI,CAAC+C,KAAL,GAAa;ADZf9C,ACaI+C,AE/BH,EHkBD/C,ICaI+C,MDbM,ACaA,EDbGhD,ACaD,IDbA,CCYG,GDZO,CAAE,CA9FT;AC4GXiD,AE9BJ,MF8BIA,SAAS,EAAE,IAFA;ADVf,ACaIC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb,CAlG6B,CAyG7B;;AACAnD,IAAAA,IAAI,CAACoD,cAAL,GAAsB,KAAtB,CA1G6B,CA4G7B;ADfFlD,AGnBA0E,EHmBA1E,AGnBA0E,KAAK,GAAG,MHmBM,EAAE,CAACzE,QAAD,EAAWH,IAAX,KAAoB,CAAE,CArGvB;ACqHb,AElCA,SFkCK,AElCAc,IFkCIyB,CAAT,EElCA,CAAaxC,CFkCCC,IAAI,CAACrB,CElCnB,CAAqB,IAArB,CFkCA,EAA4B;ADd9B,ACeIqB,AElCF,MFkCEA,GElCGoD,CFkCC,CAACN,QAAL,CAAcP,CAAd,EElCF,EFkCqBA,CAAnB,AElCoB,KAAtB;AFmCC,AElCD,KF7E6B,CAiH7B,GEpCKqD,sBAAL,CAA4B,IAA5B;AACA,SAAKD,YAAL;AACA,QAAI,KAAK9F,oBAAT,EAA+B,KAAKgG,eAAL;AFmC/B7F,AElCA,IFkCAA,IAAI,CAACqD,AElCAiC,OAAL,GAAeQ,MFkCf,GAAwB,CElCC,CAAC,GFkCGxC,GElCG,gBFkCR,CAAyBtD,IAAzB,CAAxB;ADdFI,ACgBEJ,AEnCE,EHmBJI,ECgBEJ,IAAI,CAACL,MDhBM,EAAE,CAACQ,ICgBd,GAAqBH,CDhBR,EAAWA,CCgBC,CAACc,EDhBb,KAAoB,ACgBZ,CDhBc,ACgBDnB,CD5HrB,YC4Hb;AAEA,AEpCE,SFoCG4D,CEpCC,CAAC,KAAKF,WFoCZ,CAAwBrD,IAAxB,AEpCM,IAA0B,KAAKqD,gBAAL,CAAsBf,MAAtB,KAAiC,CAA/D,EAAkE;AHoBtE,ACiBC,AEpCK,aAAKW,SAAL,CAAe,KAAKtE,OAAL,CAAa,KAAKmE,QAAL,CAAc,KAAK3C,QAAnB,CAAb,CAAf,EAA2D,KAAKwC,MAAhE;AACD,OAFD,MAEO;AFqCXW,AEpCM,EFoCNA,mBAAmB,CAACtD,IAAD,EAAO;AACxB,AEpCI,QFoCAuB,KEpCK0D,IFoCI,GAAG,EAAhB,AEpCI,CAAe,KAAK5B,gBAApB,EAAsC,KAAKA,gBAAL,CAAsBf,MAA5D;AHoBNjC,AGnBK,EHmBLA,sBAAsB,EAAGL,IAAD,IAAU,CAAE,CAlHrB;ACmIb,AEnCC,KARwB,EAQtB,CFmCCA,IAAI,AEnCAlB,CFmCCc,IAAT,EAAe,GE3CU,CAAzB;AH4BF,ACgBI2B,AEnCH,MFmCGA,SAAS,GAAGvB,IAAI,CAACgB,EAAL,CAAQQ,YAAR,CAAqBxB,IAAI,CAACJ,IAA1B,CAAZ;AACD,AElCH,KFgCE,MAEO,IAAII,IAAI,CAACmB,OAAT,EAAkB;AACvBI,MAAAA,SAAS,GAAGvB,IAAI,CAACgB,EAAL,CAAQwC,KAApB;AACD,KAFM,MAEA,IAAIxD,IAAI,CAACF,WAAL,KAAqB,MAAzB,EAAiC;AACtCyB,MAAAA,SAAS,GAAGvB,IAAI,CAACgB,EAAL,CAAQ0B,SAApB;ADfJpC,ACgBG,EDhBHA,GCcS,MAEA,KDhBK,EAAE,CAACH,QAAD,EAAWH,IAAX,KAAoB,CAAE,CAzHvB;AC0IXuB,MAAAA,SAAS,GAAGvB,IAAI,CAACgB,EAAL,CAAQS,WAApB;ADfJ,ACgBG;;AACD,AEnCFwB,EAAAA,SFmCS1B,AEnCA,CAAC2B,QFmCR,CEnCO,EAAYC,SAAZ,EAAuB;AFoC/B,AEnCC,QAAI,KAAKhE,OAAL,IAAgB,KAAK6B,EAAL,CAAQ+E,SAAR,CAAkBC,QAAlB,CAA2B,KAAK5G,YAAhC,CAApB,EAAmE;AACjE,WAAK4B,EAAL,CAAQ+E,SAAR,CAAkBE,MAAlB,CAAyB,KAAK7G,YAA9B;AHqBJmB,ACeAgD,AEnCI,EHoBJhD,ACeAgD,QEnCQ,KAAKiC,EHoBE,EAAE,CAACrF,ACeA,CAACH,AEnCf,EAAiB,EFmCH,EAAO,CDfR,AGpBSwF,EHoBExF,IAAX,AGpBI,CAAY+F,IHoBI,CAAE,CAhIxB,GG4GM,CAAsBE,MAAtB,CAA6B,KAAK7G,YAAlC;AFoCnB,AEnCC,UFmCKqE,WAAW,GAAG,mBAApB;ADdF;ACeE,AElCA,QFkCI,CAACzD,CElCCkG,GFkCG,CAACvG,IElCI,GAAG,KAAKwG,CFkCtB,EAAyB,MElCR,CAAe,KAAKtH,SAApB,CAAjB;AFmCE,AElCF,QAAIuH,QAAQ,GAAG,CAAf;AFmCC;ADbH5F,AGpBE,EHoBFA,MGpBM,CHoBC,EAAGR,EGpBC+C,EHoBF,GGpBH,CHoBa,AGpBFC,CHoBI,CAtIN,IGkHT,KAAsB,IAA1B,EAAgC;AFkChC,AEjCE,QFiCE,CAAChD,EEjCEqG,EFiCE,CAAC5G,UAAN,CEjCF,CAAoByD,EFiCE,CAAClD,IAAI,CAACb,CEjC5B,EAA+BgE,IFiCjC,EAAuC,GEjCrC,EAA0C,IAA1C;AHqBJ,ACaI,AEjCA;AFkCD,AEjCA,KAZ6B,CAc9B;;AFgCA,QAAIlC,QAAQ,CAACC,aAAT,CAAwB,IAAGuC,WAAY,GAAvC,CAAJ,EAAgD;AAC9C,AEhCF,SAAK6B,OAAL,GAAeQ,UAAU,CAAC,MAAM;AHqBlCrF,ACYG,AEhCC,EHoBJA,MAAM,EAAE,CAACN,QAAD,EAAWH,IAAX,KAAoB,CAAE,CA7If;AG0HXmD,MAAAA,SAAS,GAAGsB,uBAAWN,aAAX,CAAyBjB,SAAzB,EAAoCC,SAApC,EAA+C,IAA/C,CAAZ;AHqBJ,ACYE,AE/BE,QF+BEO,EE/BE4C,CF+BC,GAAGrF,KE/BK,GF+BG,AE/BA,CF+BC0C,AE/BjB,aF+BQ,CAAuB,OAAvB,CAAV;AACAD,AE/BE,IF+BFA,GAAG,CAACE,EE/BES,EF+BN,GAAW,CE/BC,GAAGnB,MF+Bf,GE/BwB,CAACmB,MAAV,CAAiBlB,SAAjB,CAAb,CAL8B,CAM9B;AF+BFO,AE9BE,IF8BFA,GAAG,CAACG,YAAJ,CAAiBJ,WAAjB,EAA8B,IAA9B;AAEA,AE/BE,QF+BEK,QAAQ,GAAG,EAAf;;ADXFpD,ACYE,AE/BE,EHmBJA,MCYMV,CDZC,CGnBCqE,CHmBC,CAAClE,ACYA,CAACV,GE/BG,CAAC6E,GHmBN,EAAWtE,CCYlB,AE/BM,CAAc,CF+BC,AE/Bf,CHmBC,KAAoB,AGnBA,CHmBE,CApJhB,CGiIX,EAA8B;AFgC9B8D,AE/BE,MF+BFA,ME/BM,EF+BE,IAAK,GE/BEyC,IAAT,CAAclC,MAAd,CAAJ,EAA2B;AHoBjC,AGnBQ,cAAImC,IAAI,GAAG,CAAX,CADyB,CACX;;AACdnC,UAAAA,MAAM,GAAG,MAAMoC,IAAN,CAAWpC,MAAX,EAAmB,CAAnB,CAAT;AACAmC,UAAAA,IAAI,IAAInC,MAAM,CAAC/B,MAAf;AHqBR3B,AGpBQ2F,EHoBR3F,QGpBQ2F,CHoBC,EAAGtG,IAAD,EGpBM,EHoBI,CAAE,AGpBH0G,QAAQ,CAACrC,MAAD,CAApB;AHtIO,AGuIP,CHvIV,cGuIesC,cAAL,GAAsB,IAAtB;AACA,eHqBKjI,AGrBAoC,OAAL,CAAaR,cAAb,CAA4B,KAAKH,QAAjC,EAA2C,IAA3C,EANyB,CAOzB;;AACA+C,UAAAA,SAAS,GACPA,SAAS,CAAC0D,SAAV,CAAoB,CAApB,EAAuBzD,SAAvB,IACAD,SAAS,CAAC0D,SAAV,CAAoBzD,SAAS,GAAGqD,IAAhC,CAFF;AAGA,eAAKxB,cAAL,CAAoB,IAApB;AACD;AACF,OAvB6B,CAyB9B;AACA;;;AACA,UAAIX,MAAM,CAACC,MAAP,CAAc,CAAd,MAAqB,GAAzB,EAA8B;AAC5B,OFaF,QEbSpB,SAAS,CAACmB,MAAV,CAAiBlB,SAAS,GAAGiD,QAA7B,EAAuC9B,MAAvC,CAA8C,CAA9C,MAAqD,GAA5D,EAAiE;AF+BpE,AE9BK8B,UAAAA,QAAQ;AACR,cAAIjD,SAAS,GAAGiD,QAAZ,GAAuBlD,SAAS,CAACZ,MAArC,EAA6C;AF8BnD,AE7BK,QF6BDtC,CEjC4B,CAK5B,EF4BI,CAACb,OAAT,EAAkB;AAChB2E,MAAAA,QAAQ,IAAK;;AE5BX,cAAM+C,gBAAgB,GAAG3D,SAAS,CAAC0D,SAAV,CAAoB,CAApB,EAAuBzD,SAAvB,CAAzB;AACA,cAAM2D,aAAa,GAAG5D,SAAS,CAAC0D,SAAV,CACpBC,gBAAgB,CAACvE,MAAjB,GAA0B,CADN,EAEpBa,SAAS,GAAGiD,QAFQ,CAAtB;AAIA,cAAMW,eAAe,GAAG7D,SAAS,CAAC0D,SAAV,CAAoBzD,SAAS,GAAGiD,QAAZ,GAAuB,CAA3C,CAAxB;AACAlD,QAAAA,SAAS,GAAG2D,gBAAgB,GAAGC,aAAnB,GAAmCC,eAA/C;AACAX,QAAAA,QAAQ;AACT,OAzC6B,CA2C9B;;OFkBA;AAUD,AE3BC,WAAKd,OAAL,GAAeQ,UAAU,CAAC,MAAM;AAC9B;AF2BJ,AE1BI,QF0BApC,GAAG,CAACpB,CE1BC0C,KF0BL,KAAe,CAAnB,EAAsB,CE1BlB,CAAoB,KAApB,EAF8B,CAI9B;AFyBF;AACD,AEzBG,YAAI7B,SAAS,IAAID,SAAS,CAACZ,MAA3B,EAAmC;AACjC,eAAK0E,UAAL,CAAgB9D,SAAhB,EAA2BC,SAA3B;AFyBNO,AExBK,IFwBLA,GAAG,CAAChB,CE1BA,MAEO,EFwBX,GAAgBoB,QAAhB;AACA7C,AExBM,IFwBNA,QAAQ,CAAC8C,EExBEkD,EFwBX,CAAcjD,OExBR,CAAgBd,GFwBtB,CAA0BQ,GAA1B,EExBM,EAA2BP,SAA3B,EAAsCiD,QAAtC;AFyBP,AExBM,SAT6B,CAU9B;;AF/KyB;AEgLzB,YAAI,KAAKO,cAAT,EAAyB;AACvB,eAAKA,cAAL,GAAsB,KAAtB;AFwBH,AEvBG,IFuBC1C,WAAW,AEvBPnD,GFuBU,IAAIF,AEvBnB,CAAaL,UFuBE,EAAlB,GEvBG,CAA6B,KAAKJ,QAAlC,EAA4C,IAA5C;AACD;AACF,OAfwB,EAetBmG,SAfsB,CAAzB,CA5C8B,CA6D9B;AACD,KA9DwB,EA8DtBJ,QA9DsB,CAAzB;AA+DD;AAED;;;;;;;;AAMAe,EAAAA,UAAU,CAAC/D,SAAD,EAAYC,SAAZ,EAAuBiD,QAAvB,EAAiC;AACzC;AACA,QAAIjD,SAAS,KAAK,CAAlB,EAAqB;AACnB,WAAK6B,cAAL,CAAoB,KAApB;AACA,WAAKlE,OAAL,CAAaZ,cAAb,CAA4B,KAAKC,QAAjC,EAA2C,IAA3C;AACD,KALwC,CAMzC;AACA;;;AACAgD,IAAAA,SAAS,IAAIiD,QAAb;AACA,UAAMc,UAAU,GAAGhE,SAAS,CAACmB,MAAV,CAAiB,CAAjB,EAAoBlB,SAApB,CAAnB;AACA,SAAKoC,WAAL,CAAiB2B,UAAjB,EAVyC,CAWzC;;AACA,SAAKjE,SAAL,CAAeC,SAAf,EAA0BC,SAA1B;AACD;AAED;;;;;;;;AAMA6D,EAAAA,UAAU,CAAC9D,SAAD,EAAYC,SAAZ,EAAuB;AAC/B;AACA,SAAKrC,OAAL,CAAaV,aAAb,CAA2B,KAAKD,QAAhC,EAA0C,IAA1C;AACA,SAAK6E,cAAL,CAAoB,IAApB,EAH+B,CAI/B;;AACA,QAAI,KAAK7E,QAAL,KAAkB,KAAKxB,OAAL,CAAa2D,MAAb,GAAsB,CAA5C,EAA+C;AAC7C;AACA,WAAK6E,QAAL,GAF6C,CAG7C;;AACA,UAAI,KAAK7H,IAAL,KAAc,KAAd,IAAuB,KAAKuD,OAAL,KAAiB,KAAKtD,SAAjD,EAA4D;AAC1D;AACD;AACF;;AACD,SAAK+F,OAAL,GAAeQ,UAAU,CAAC,MAAM;AAC9B,WAAKb,SAAL,CAAe/B,SAAf,EAA0BC,SAA1B;AACD,KAFwB,EAEtB,KAAKjE,SAFiB,CAAzB;AAGD;AAED;;;;;;;;AAMA+F,EAAAA,SAAS,CAAC/B,SAAD,EAAYC,SAAZ,EAAuB;AAC9B,QAAI,KAAKJ,KAAL,CAAWC,MAAX,KAAsB,IAA1B,EAAgC;AAC9B,WAAKqD,cAAL,CAAoBnD,SAApB,EAA+BC,SAA/B,EAA0C,IAA1C;AACA;AACD;;AACD,QAAI,KAAKhE,OAAT,EAAkB,OAAO,KAAKiI,WAAL,EAAP;AAElB,SAAKpC,cAAL,CAAoB,KAApB;AACA,UAAMkB,QAAQ,GAAG,KAAKC,SAAL,CAAe,KAAKpH,SAApB,CAAjB;AAEA,SAAKuG,OAAL,GAAeQ,UAAU,CAAC,MAAM;AAC9B3C,MAAAA,SAAS,GAAGsB,uBAAWD,kBAAX,CAA8BtB,SAA9B,EAAyCC,SAAzC,EAAoD,IAApD,CAAZ,CAD8B,CAE9B;;AACA,YAAMkE,mBAAmB,GAAGnE,SAAS,CAACmB,MAAV,CAAiB,CAAjB,EAAoBlB,SAApB,CAA5B;AACA,WAAKoC,WAAL,CAAiB8B,mBAAjB,EAJ8B,CAM9B;;AACA,UAAI,KAAKrI,cAAT,EAAyB;AACvB;AACA,YAAIkI,UAAU,GAAG,KAAKvI,OAAL,CAAa,KAAKwB,QAAL,GAAgB,CAA7B,CAAjB;;AACA,YACE+G,UAAU,IACVG,mBAAmB,KAAKH,UAAU,CAAC7C,MAAX,CAAkB,CAAlB,EAAqBlB,SAArB,CAF1B,EAGE;AACA,eAAKP,OAAL,GAAeO,SAAf;AACD,SALD,MAKO;AACL,eAAKP,OAAL,GAAe,CAAf;AACD;AACF,OAlB6B,CAoB9B;AACA;;;AACA,UAAIO,SAAS,GAAG,KAAKP,OAArB,EAA8B;AAC5B;AACAO,QAAAA,SAAS,GAFmB,CAG5B;;AACA,aAAK8B,SAAL,CAAe/B,SAAf,EAA0BC,SAA1B;AACD,OALD,MAKO,IAAIA,SAAS,IAAI,KAAKP,OAAtB,EAA+B;AACpC;AACA;AACA,aAAKzC,QAAL,GAHoC,CAIpC;;AACA,YAAI,KAAKA,QAAL,KAAkB,KAAKxB,OAAL,CAAa2D,MAAnC,EAA2C;AACzC,eAAKnC,QAAL,GAAgB,CAAhB;AACA,eAAKW,OAAL,CAAaT,sBAAb;AACA,eAAKuF,sBAAL;AACA,eAAKhB,KAAL;AACD,SALD,MAKO;AACL,eAAK3B,SAAL,CAAe,KAAKtE,OAAL,CAAa,KAAKmE,QAAL,CAAc,KAAK3C,QAAnB,CAAb,CAAf,EAA2DgD,SAA3D;AACD;AACF,OAxC6B,CAyC9B;;AACD,KA1CwB,EA0CtB+C,QA1CsB,CAAzB;AA2CD;AAED;;;;;;AAIAiB,EAAAA,QAAQ,GAAG;AACT,SAAKrG,OAAL,CAAab,UAAb,CAAwB,IAAxB;;AACA,QAAI,KAAKX,IAAT,EAAe;AACb,WAAKuD,OAAL;AACD,KAFD,MAEO;AACL,WAAKO,cAAL,GAAsB,IAAtB;AACD;AACF;AAED;;;;;;;;;AAOAiD,EAAAA,cAAc,CAACnD,SAAD,EAAYC,SAAZ,EAAuBmE,QAAvB,EAAiC;AAC7C,SAAKvE,KAAL,CAAWE,SAAX,GAAuBqE,QAAvB;AACA,SAAKvE,KAAL,CAAWG,SAAX,GAAuBA,SAAvB;AACA,SAAKH,KAAL,CAAWI,SAAX,GAAuBA,SAAvB;AACD;AAED;;;;;;;AAKA6B,EAAAA,cAAc,CAACuC,UAAD,EAAa;AACzB,QAAI,CAAC,KAAK/B,MAAV,EAAkB,OADO,CAEzB;;AACA,QAAI,KAAKzC,KAAL,CAAWC,MAAf,EAAuB;AACvB,QAAI,KAAK1B,cAAL,KAAwBiG,UAA5B,EAAwC;AACxC,SAAKjG,cAAL,GAAsBiG,UAAtB;;AACA,QAAIA,UAAJ,EAAgB;AACd,WAAK/B,MAAL,CAAYO,SAAZ,CAAsByB,GAAtB,CAA0B,qBAA1B;AACD,KAFD,MAEO;AACL,WAAKhC,MAAL,CAAYO,SAAZ,CAAsBE,MAAtB,CAA6B,qBAA7B;AACD;AACF;AAED;;;;;;;AAKAE,EAAAA,SAAS,CAACsB,KAAD,EAAQ;AACf,WAAOC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBH,KAAjB,GAA0B,CAArC,IAA0CA,KAAjD;AACD;AAED;;;;;;AAIA7B,EAAAA,sBAAsB,GAAG;AACvB,QAAI,CAAC,KAAK3G,OAAV,EAAmB;AACnB,SAAK6D,QAAL,GAAgB,KAAKA,QAAL,CAAc+E,IAAd,CAAmB,MAAMH,IAAI,CAACE,MAAL,KAAgB,GAAzC,CAAhB;AACD;AAED;;;;;;AAIAR,EAAAA,WAAW,GAAG;AACZ,SAAKpG,EAAL,CAAQ8G,SAAR,IAAsB,IAAG,KAAK1I,YAAa,EAA3C;AACA,QAAI,KAAKoG,MAAT,EAAiB,KAAKA,MAAL,CAAYsC,SAAZ,IAA0B,IAAG,KAAK1I,YAAa,EAA/C;AACjB,WAAO0G,UAAU,CAAC,MAAM;AACtB,WAAK3F,QAAL;AACA,WAAKoF,WAAL,CAAiB,EAAjB,EAFsB,CAItB;;AACA,UAAI,KAAK5G,OAAL,CAAa2D,MAAb,GAAsB,KAAKnC,QAA/B,EAAyC;AACvC,aAAK8C,SAAL,CAAe,KAAKtE,OAAL,CAAa,KAAKmE,QAAL,CAAc,KAAK3C,QAAnB,CAAb,CAAf,EAA2D,CAA3D;AACD,OAFD,MAEO;AACL,aAAK8C,SAAL,CAAe,KAAKtE,OAAL,CAAa,CAAb,CAAf,EAAgC,CAAhC;AACA,aAAKwB,QAAL,GAAgB,CAAhB;AACD;AACF,KAXgB,EAWd,KAAKd,YAXS,CAAjB;AAYD;AAED;;;;;;;;AAMAkG,EAAAA,WAAW,CAACwC,GAAD,EAAM;AACf,QAAI,KAAKnI,IAAT,EAAe;AACb,WAAKoB,EAAL,CAAQ6C,YAAR,CAAqB,KAAKjE,IAA1B,EAAgCmI,GAAhC;AACD,KAFD,MAEO;AACL,UAAI,KAAK5G,OAAT,EAAkB;AAChB,aAAKH,EAAL,CAAQwC,KAAR,GAAgBuE,GAAhB;AACD,OAFD,MAEO,IAAI,KAAKjI,WAAL,KAAqB,MAAzB,EAAiC;AACtC,aAAKkB,EAAL,CAAQ0B,SAAR,GAAoBqF,GAApB;AACD,OAFM,MAEA;AACL,aAAK/G,EAAL,CAAQS,WAAR,GAAsBsG,GAAtB;AACD;AACF;AACF;AAED;;;;;;;AAKAlC,EAAAA,eAAe,GAAG;AAChB,QAAI,CAAC,KAAK1E,OAAV,EAAmB;AACnB,SAAKH,EAAL,CAAQgH,gBAAR,CAAyB,OAAzB,EAAmCC,CAAD,IAAO;AACvC,WAAKlD,IAAL;AACD,KAFD;AAGA,SAAK/D,EAAL,CAAQgH,gBAAR,CAAyB,MAAzB,EAAkCC,CAAD,IAAO;AACtC,UAAI,KAAKjH,EAAL,CAAQwC,KAAR,IAAiB,KAAKxC,EAAL,CAAQwC,KAAR,CAAclB,MAAd,KAAyB,CAA9C,EAAiD;AAC/C;AACD;;AACD,WAAKwC,KAAL;AACD,KALD;AAMD;AAED;;;;;;AAIAa,EAAAA,YAAY,GAAG;AACb,QAAI,CAAC,KAAKlG,UAAV,EAAsB;AACtB,QAAI,KAAK+F,MAAT,EAAiB;AACjB,SAAKA,MAAL,GAAcvE,QAAQ,CAAC0C,aAAT,CAAuB,MAAvB,CAAd;AACA,SAAK6B,MAAL,CAAYsC,SAAZ,GAAwB,cAAxB;AACA,SAAKtC,MAAL,CAAY9C,SAAZ,GAAwB,KAAKhD,UAA7B;AACA,SAAKsB,EAAL,CAAQyE,UAAR,IACE,KAAKzE,EAAL,CAAQyE,UAAR,CAAmByC,YAAnB,CAAgC,KAAK1C,MAArC,EAA6C,KAAKxE,EAAL,CAAQmH,WAArD,CADF;AAED;;AArawB","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Defaults & options\n * @returns {object} Typed defaults & options\n * @public\n */\n\nconst defaults = {\n  /**\n   * @property {array} strings strings to be typed\n   * @property {string} stringsElement ID of element containing string children\n   */\n  strings: [\n    'These are the default values...',\n    'You know what you should do?',\n    'Use your own!',\n    'Have a great day!'\n  ],\n  stringsElement: null,\n\n  /**\n   * @property {number} typeSpeed type speed in milliseconds\n   */\n  typeSpeed: 0,\n\n  /**\n   * @property {number} startDelay time before typing starts in milliseconds\n   */\n  startDelay: 0,\n\n  /**\n   * @property {number} backSpeed backspacing speed in milliseconds\n   */\n  backSpeed: 0,\n\n  /**\n   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n   */\n  smartBackspace: true,\n\n  /**\n   * @property {boolean} shuffle shuffle the strings\n   */\n  shuffle: false,\n\n  /**\n   * @property {number} backDelay time before backspacing in milliseconds\n   */\n  backDelay: 700,\n\n  /**\n   * @property {boolean} fadeOut Fade out instead of backspace\n   * @property {string} fadeOutClass css class for fade animation\n   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n   */\n  fadeOut: false,\n  fadeOutClass: 'typed-fade-out',\n  fadeOutDelay: 500,\n\n  /**\n   * @property {boolean} loop loop strings\n   * @property {number} loopCount amount of loops\n   */\n  loop: false,\n  loopCount: Infinity,\n\n  /**\n   * @property {boolean} showCursor show cursor\n   * @property {string} cursorChar character for cursor\n   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n   */\n  showCursor: true,\n  cursorChar: '|',\n  autoInsertCss: true,\n\n  /**\n   * @property {string} attr attribute for typing\n   * Ex: input placeholder, value, or just HTML text\n   */\n  attr: null,\n\n  /**\n   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n   */\n  bindInputFocusEvents: false,\n\n  /**\n   * @property {string} contentType 'html' or 'null' for plaintext\n   */\n  contentType: 'html',\n\n  /**\n   * Before it begins typing\n   * @param {Typed} self\n   */\n  onBegin: (self) => {},\n\n  /**\n   * All typing is complete\n   * @param {Typed} self\n   */\n  onComplete: (self) => {},\n\n  /**\n   * Before each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  preStringTyped: (arrayPos, self) => {},\n\n  /**\n   * After each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStringTyped: (arrayPos, self) => {},\n\n  /**\n   * During looping, after last string is typed\n   * @param {Typed} self\n   */\n  onLastStringBackspaced: (self) => {},\n\n  /**\n   * Typing has been stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingPaused: (arrayPos, self) => {},\n\n  /**\n   * Typing has been started after being stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingResumed: (arrayPos, self) => {},\n\n  /**\n   * After reset\n   * @param {Typed} self\n   */\n  onReset: (self) => {},\n\n  /**\n   * After stop\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStop: (arrayPos, self) => {},\n\n  /**\n   * After start\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStart: (arrayPos, self) => {},\n\n  /**\n   * After destroy\n   * @param {Typed} self\n   */\n  onDestroy: (self) => {}\n};\n\nexport default defaults;\n","import defaults from './defaults.js';\n/**\n * Initialize the Typed object\n */\n\nexport default class Initializer {\n  /**\n   * Load up defaults & options on the Typed instance\n   * @param {Typed} self instance of Typed\n   * @param {object} options options object\n   * @param {string} elementId HTML element ID _OR_ instance of HTML element\n   * @private\n   */\n\n  load(self, options, elementId) {\n    // chosen element to manipulate text\n    if (typeof elementId === 'string') {\n      self.el = document.querySelector(elementId);\n    } else {\n      self.el = elementId;\n    }\n\n    self.options = { ...defaults, ...options };\n\n    // attribute to type into\n    self.isInput = self.el.tagName.toLowerCase() === 'input';\n    self.attr = self.options.attr;\n    self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\n    // show cursor\n    self.showCursor = self.isInput ? false : self.options.showCursor;\n\n    // custom cursor\n    self.cursorChar = self.options.cursorChar;\n\n    // Is the cursor blinking\n    self.cursorBlinking = true;\n\n    // text content of element\n    self.elContent = self.attr\n      ? self.el.getAttribute(self.attr)\n      : self.el.textContent;\n\n    // html or plain text\n    self.contentType = self.options.contentType;\n\n    // typing speed\n    self.typeSpeed = self.options.typeSpeed;\n\n    // add a delay before typing starts\n    self.startDelay = self.options.startDelay;\n\n    // backspacing speed\n    self.backSpeed = self.options.backSpeed;\n\n    // only backspace what doesn't match the previous string\n    self.smartBackspace = self.options.smartBackspace;\n\n    // amount of time to wait before backspacing\n    self.backDelay = self.options.backDelay;\n\n    // Fade out instead of backspace\n    self.fadeOut = self.options.fadeOut;\n    self.fadeOutClass = self.options.fadeOutClass;\n    self.fadeOutDelay = self.options.fadeOutDelay;\n\n    // variable to check whether typing is currently paused\n    self.isPaused = false;\n\n    // input strings of text\n    self.strings = self.options.strings.map((s) => s.trim());\n\n    // div containing strings\n    if (typeof self.options.stringsElement === 'string') {\n      self.stringsElement = document.querySelector(self.options.stringsElement);\n    } else {\n      self.stringsElement = self.options.stringsElement;\n    }\n\n    if (self.stringsElement) {\n      self.strings = [];\n      self.stringsElement.style.display = 'none';\n      const strings = Array.prototype.slice.apply(self.stringsElement.children);\n      const stringsLength = strings.length;\n\n      if (stringsLength) {\n        for (let i = 0; i < stringsLength; i += 1) {\n          const stringEl = strings[i];\n          self.strings.push(stringEl.innerHTML.trim());\n        }\n      }\n    }\n\n    // character number position of current string\n    self.strPos = 0;\n\n    // current array position\n    self.arrayPos = 0;\n\n    // index of string to stop backspacing on\n    self.stopNum = 0;\n\n    // Looping logic\n    self.loop = self.options.loop;\n    self.loopCount = self.options.loopCount;\n    self.curLoop = 0;\n\n    // shuffle the strings\n    self.shuffle = self.options.shuffle;\n    // the order of strings\n    self.sequence = [];\n\n    self.pause = {\n      status: false,\n      typewrite: true,\n      curString: '',\n      curStrPos: 0\n    };\n\n    // When the typing is complete (when not looped)\n    self.typingComplete = false;\n\n    // Set the order in which the strings are typed\n    for (let i in self.strings) {\n      self.sequence[i] = i;\n    }\n\n    // If there is some text in the element\n    self.currentElContent = this.getCurrentElContent(self);\n\n    self.autoInsertCss = self.options.autoInsertCss;\n\n    this.appendAnimationCss(self);\n  }\n\n  getCurrentElContent(self) {\n    let elContent = '';\n    if (self.attr) {\n      elContent = self.el.getAttribute(self.attr);\n    } else if (self.isInput) {\n      elContent = self.el.value;\n    } else if (self.contentType === 'html') {\n      elContent = self.el.innerHTML;\n    } else {\n      elContent = self.el.textContent;\n    }\n    return elContent;\n  }\n\n  appendAnimationCss(self) {\n    const cssDataName = 'data-typed-js-css';\n    if (!self.autoInsertCss) {\n      return;\n    }\n    if (!self.showCursor && !self.fadeOut) {\n      return;\n    }\n    if (document.querySelector(`[${cssDataName}]`)) {\n      return;\n    }\n\n    let css = document.createElement('style');\n    css.type = 'text/css';\n    css.setAttribute(cssDataName, true);\n\n    let innerCss = '';\n    if (self.showCursor) {\n      innerCss += `\n        .typed-cursor{\n          opacity: 1;\n        }\n        .typed-cursor.typed-cursor--blink{\n          animation: typedjsBlink 0.7s infinite;\n          -webkit-animation: typedjsBlink 0.7s infinite;\n                  animation: typedjsBlink 0.7s infinite;\n        }\n        @keyframes typedjsBlink{\n          50% { opacity: 0.0; }\n        }\n        @-webkit-keyframes typedjsBlink{\n          0% { opacity: 1; }\n          50% { opacity: 0.0; }\n          100% { opacity: 1; }\n        }\n      `;\n    }\n    if (self.fadeOut) {\n      innerCss += `\n        .typed-fade-out{\n          opacity: 0;\n          transition: opacity .25s;\n        }\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\n          -webkit-animation: 0;\n          animation: 0;\n        }\n      `;\n    }\n    if (css.length === 0) {\n      return;\n    }\n    css.innerHTML = innerCss;\n    document.body.appendChild(css);\n  }\n}\n\nexport let initializer = new Initializer();\n","/**\n * TODO: These methods can probably be combined somehow\n * Parse HTML tags & HTML Characters\n */\n\nexport default class HTMLParser {\n  /**\n   * Type HTML tags & HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n\n  typeHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substr(curStrPos).charAt(0);\n    if (curChar === '<' || curChar === '&') {\n      let endTag = '';\n      if (curChar === '<') {\n        endTag = '>';\n      } else {\n        endTag = ';';\n      }\n      while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n        curStrPos++;\n        if (curStrPos + 1 > curString.length) {\n          break;\n        }\n      }\n      curStrPos++;\n    }\n    return curStrPos;\n  }\n\n  /**\n   * Backspace HTML tags and HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n  backSpaceHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substr(curStrPos).charAt(0);\n    if (curChar === '>' || curChar === ';') {\n      let endTag = '';\n      if (curChar === '>') {\n        endTag = '<';\n      } else {\n        endTag = '&';\n      }\n      while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n        curStrPos--;\n        if (curStrPos < 0) {\n          break;\n        }\n      }\n      curStrPos--;\n    }\n    return curStrPos;\n  }\n}\n\nexport let htmlParser = new HTMLParser();\n","import { initializer } from './initializer.js';\nimport { htmlParser } from './html-parser.js';\n\n/**\n * Welcome to Typed.js!\n * @param {string} elementId HTML element ID _OR_ HTML element\n * @param {object} options options object\n * @returns {object} a new Typed object\n */\nexport default class Typed {\n  constructor(elementId, options) {\n    // Initialize it up\n    initializer.load(this, options, elementId);\n    // All systems go!\n    this.begin();\n  }\n\n  /**\n   * Toggle start() and stop() of the Typed instance\n   * @public\n   */\n  toggle() {\n    this.pause.status ? this.start() : this.stop();\n  }\n\n  /**\n   * Stop typing / backspacing and enable cursor blinking\n   * @public\n   */\n  stop() {\n    if (this.typingComplete) return;\n    if (this.pause.status) return;\n    this.toggleBlinking(true);\n    this.pause.status = true;\n    this.options.onStop(this.arrayPos, this);\n  }\n\n  /**\n   * Start typing / backspacing after being stopped\n   * @public\n   */\n  start() {\n    if (this.typingComplete) return;\n    if (!this.pause.status) return;\n    this.pause.status = false;\n    if (this.pause.typewrite) {\n      this.typewrite(this.pause.curString, this.pause.curStrPos);\n    } else {\n      this.backspace(this.pause.curString, this.pause.curStrPos);\n    }\n    this.options.onStart(this.arrayPos, this);\n  }\n\n  /**\n   * Destroy this instance of Typed\n   * @public\n   */\n  destroy() {\n    this.reset(false);\n    this.options.onDestroy(this);\n  }\n\n  /**\n   * Reset Typed and optionally restarts\n   * @param {boolean} restart\n   * @public\n   */\n  reset(restart = true) {\n    clearInterval(this.timeout);\n    this.replaceText('');\n    if (this.cursor && this.cursor.parentNode) {\n      this.cursor.parentNode.removeChild(this.cursor);\n      this.cursor = null;\n    }\n    this.strPos = 0;\n    this.arrayPos = 0;\n    this.curLoop = 0;\n    if (restart) {\n      this.insertCursor();\n      this.options.onReset(this);\n      this.begin();\n    }\n  }\n\n  /**\n   * Begins the typing animation\n   * @private\n   */\n  begin() {\n    this.options.onBegin(this);\n    this.typingComplete = false;\n    this.shuffleStringsIfNeeded(this);\n    this.insertCursor();\n    if (this.bindInputFocusEvents) this.bindFocusEvents();\n    this.timeout = setTimeout(() => {\n      // Check if there is some text in the element, if yes start by backspacing the default message\n      if (!this.currentElContent || this.currentElContent.length === 0) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      } else {\n        // Start typing\n        this.backspace(this.currentElContent, this.currentElContent.length);\n      }\n    }, this.startDelay);\n  }\n\n  /**\n   * Called for each character typed\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  typewrite(curString, curStrPos) {\n    if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n      this.el.classList.remove(this.fadeOutClass);\n      if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n    }\n\n    const humanize = this.humanizer(this.typeSpeed);\n    let numChars = 1;\n\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, true);\n      return;\n    }\n\n    // contain typing function in a timeout humanize'd delay\n    this.timeout = setTimeout(() => {\n      // skip over any HTML chars\n      curStrPos = htmlParser.typeHtmlChars(curString, curStrPos, this);\n\n      let pauseTime = 0;\n      let substr = curString.substr(curStrPos);\n      // check for an escape character before a pause value\n      // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n      // single ^ are removed from string\n      if (substr.charAt(0) === '^') {\n        if (/^\\^\\d+/.test(substr)) {\n          let skip = 1; // skip at least 1\n          substr = /\\d+/.exec(substr)[0];\n          skip += substr.length;\n          pauseTime = parseInt(substr);\n          this.temporaryPause = true;\n          this.options.onTypingPaused(this.arrayPos, this);\n          // strip out the escape character and pause value so they're not printed\n          curString =\n            curString.substring(0, curStrPos) +\n            curString.substring(curStrPos + skip);\n          this.toggleBlinking(true);\n        }\n      }\n\n      // check for skip characters formatted as\n      // \"this is a `string to print NOW` ...\"\n      if (substr.charAt(0) === '`') {\n        while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n          numChars++;\n          if (curStrPos + numChars > curString.length) break;\n        }\n        // strip out the escape characters and append all the string in between\n        const stringBeforeSkip = curString.substring(0, curStrPos);\n        const stringSkipped = curString.substring(\n          stringBeforeSkip.length + 1,\n          curStrPos + numChars\n        );\n        const stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n        curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n        numChars--;\n      }\n\n      // timeout for any pause after a character\n      this.timeout = setTimeout(() => {\n        // Accounts for blinking while paused\n        this.toggleBlinking(false);\n\n        // We're done with this sentence!\n        if (curStrPos >= curString.length) {\n          this.doneTyping(curString, curStrPos);\n        } else {\n          this.keepTyping(curString, curStrPos, numChars);\n        }\n        // end of character pause\n        if (this.temporaryPause) {\n          this.temporaryPause = false;\n          this.options.onTypingResumed(this.arrayPos, this);\n        }\n      }, pauseTime);\n\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Continue to the next string & begin typing\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  keepTyping(curString, curStrPos, numChars) {\n    // call before functions if applicable\n    if (curStrPos === 0) {\n      this.toggleBlinking(false);\n      this.options.preStringTyped(this.arrayPos, this);\n    }\n    // start typing each new char into existing string\n    // curString: arg, this.el.html: original text inside element\n    curStrPos += numChars;\n    const nextString = curString.substr(0, curStrPos);\n    this.replaceText(nextString);\n    // loop the function\n    this.typewrite(curString, curStrPos);\n  }\n\n  /**\n   * We're done typing the current string\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  doneTyping(curString, curStrPos) {\n    // fires callback function\n    this.options.onStringTyped(this.arrayPos, this);\n    this.toggleBlinking(true);\n    // is this the final string\n    if (this.arrayPos === this.strings.length - 1) {\n      // callback that occurs on the last typed string\n      this.complete();\n      // quit if we wont loop back\n      if (this.loop === false || this.curLoop === this.loopCount) {\n        return;\n      }\n    }\n    this.timeout = setTimeout(() => {\n      this.backspace(curString, curStrPos);\n    }, this.backDelay);\n  }\n\n  /**\n   * Backspaces 1 character at a time\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  backspace(curString, curStrPos) {\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, true);\n      return;\n    }\n    if (this.fadeOut) return this.initFadeOut();\n\n    this.toggleBlinking(false);\n    const humanize = this.humanizer(this.backSpeed);\n\n    this.timeout = setTimeout(() => {\n      curStrPos = htmlParser.backSpaceHtmlChars(curString, curStrPos, this);\n      // replace text with base text + typed characters\n      const curStringAtPosition = curString.substr(0, curStrPos);\n      this.replaceText(curStringAtPosition);\n\n      // if smartBack is enabled\n      if (this.smartBackspace) {\n        // the remaining part of the current string is equal of the same part of the new string\n        let nextString = this.strings[this.arrayPos + 1];\n        if (\n          nextString &&\n          curStringAtPosition === nextString.substr(0, curStrPos)\n        ) {\n          this.stopNum = curStrPos;\n        } else {\n          this.stopNum = 0;\n        }\n      }\n\n      // if the number (id of character in current string) is\n      // less than the stop number, keep going\n      if (curStrPos > this.stopNum) {\n        // subtract characters one by one\n        curStrPos--;\n        // loop the function\n        this.backspace(curString, curStrPos);\n      } else if (curStrPos <= this.stopNum) {\n        // if the stop number has been reached, increase\n        // array position to next string\n        this.arrayPos++;\n        // When looping, begin at the beginning after backspace complete\n        if (this.arrayPos === this.strings.length) {\n          this.arrayPos = 0;\n          this.options.onLastStringBackspaced();\n          this.shuffleStringsIfNeeded();\n          this.begin();\n        } else {\n          this.typewrite(this.strings[this.sequence[this.arrayPos]], curStrPos);\n        }\n      }\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Full animation is complete\n   * @private\n   */\n  complete() {\n    this.options.onComplete(this);\n    if (this.loop) {\n      this.curLoop++;\n    } else {\n      this.typingComplete = true;\n    }\n  }\n\n  /**\n   * Has the typing been stopped\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @param {boolean} isTyping\n   * @private\n   */\n  setPauseStatus(curString, curStrPos, isTyping) {\n    this.pause.typewrite = isTyping;\n    this.pause.curString = curString;\n    this.pause.curStrPos = curStrPos;\n  }\n\n  /**\n   * Toggle the blinking cursor\n   * @param {boolean} isBlinking\n   * @private\n   */\n  toggleBlinking(isBlinking) {\n    if (!this.cursor) return;\n    // if in paused state, don't toggle blinking a 2nd time\n    if (this.pause.status) return;\n    if (this.cursorBlinking === isBlinking) return;\n    this.cursorBlinking = isBlinking;\n    if (isBlinking) {\n      this.cursor.classList.add('typed-cursor--blink');\n    } else {\n      this.cursor.classList.remove('typed-cursor--blink');\n    }\n  }\n\n  /**\n   * Speed in MS to type\n   * @param {number} speed\n   * @private\n   */\n  humanizer(speed) {\n    return Math.round((Math.random() * speed) / 2) + speed;\n  }\n\n  /**\n   * Shuffle the sequence of the strings array\n   * @private\n   */\n  shuffleStringsIfNeeded() {\n    if (!this.shuffle) return;\n    this.sequence = this.sequence.sort(() => Math.random() - 0.5);\n  }\n\n  /**\n   * Adds a CSS class to fade out current string\n   * @private\n   */\n  initFadeOut() {\n    this.el.className += ` ${this.fadeOutClass}`;\n    if (this.cursor) this.cursor.className += ` ${this.fadeOutClass}`;\n    return setTimeout(() => {\n      this.arrayPos++;\n      this.replaceText('');\n\n      // Resets current string if end of loop reached\n      if (this.strings.length > this.arrayPos) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], 0);\n      } else {\n        this.typewrite(this.strings[0], 0);\n        this.arrayPos = 0;\n      }\n    }, this.fadeOutDelay);\n  }\n\n  /**\n   * Replaces current text in the HTML element\n   * depending on element type\n   * @param {string} str\n   * @private\n   */\n  replaceText(str) {\n    if (this.attr) {\n      this.el.setAttribute(this.attr, str);\n    } else {\n      if (this.isInput) {\n        this.el.value = str;\n      } else if (this.contentType === 'html') {\n        this.el.innerHTML = str;\n      } else {\n        this.el.textContent = str;\n      }\n    }\n  }\n\n  /**\n   * If using input elements, bind focus in order to\n   * start and stop the animation\n   * @private\n   */\n  bindFocusEvents() {\n    if (!this.isInput) return;\n    this.el.addEventListener('focus', (e) => {\n      this.stop();\n    });\n    this.el.addEventListener('blur', (e) => {\n      if (this.el.value && this.el.value.length !== 0) {\n        return;\n      }\n      this.start();\n    });\n  }\n\n  /**\n   * On init, insert the cursor element\n   * @private\n   */\n  insertCursor() {\n    if (!this.showCursor) return;\n    if (this.cursor) return;\n    this.cursor = document.createElement('span');\n    this.cursor.className = 'typed-cursor';\n    this.cursor.innerHTML = this.cursorChar;\n    this.el.parentNode &&\n      this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n  }\n}\n","import \"../sass/main.scss\";\r\nimport Typed from \"typed.js/src/typed\";\r\n\r\n// Custom cursor\r\nlet mouseCursor = document.querySelector(\".cursor\");\r\nwindow.addEventListener(\"mousemove\", (e) => {\r\n  mouseCursor.style.top = e.pageY + \"px\";\r\n  mouseCursor.style.left = e.pageX + \"px\";\r\n  // console.log(list);\r\n});\r\n\r\nlet linksGrow = [];\r\nlinksGrow.push(document.querySelector(\".burger\"));\r\nlet projectLinks = document.querySelectorAll(\".view abbr\");\r\nprojectLinks.forEach((link) => {\r\n  linksGrow.push(link);\r\n});\r\nlet skills = document.querySelectorAll(\".box\");\r\nskills.forEach((link) => {\r\n  linksGrow.push(link);\r\n});\r\nlet socialLinks = document.querySelectorAll(\".social__links a\");\r\nsocialLinks.forEach((link) => {\r\n  linksGrow.push(link);\r\n});\r\n// linksGrow.push(\"akdjf\");\r\nlet navLinks = document.querySelectorAll(\".list__item\");\r\nnavLinks.forEach((link) => {\r\n  linksGrow.push(link);\r\n});\r\n\r\n// console.log(linksGrow);\r\nlinksGrow.forEach((list) => {\r\n  list.addEventListener(\"mouseleave\", () => {\r\n    mouseCursor.classList.remove(\"grow\");\r\n  });\r\n  list.addEventListener(\"mouseover\", () => {\r\n    mouseCursor.classList.add(\"grow\");\r\n  });\r\n});\r\n\r\n// Toggling Humburger\r\nconst menuBtn = document.querySelector(\".burger\");\r\nmenuBtn.addEventListener(\"click\", () => {\r\n  menuBtn.classList.toggle(\"active\");\r\n  document.querySelector(\".nav__list\").classList.toggle(\"open\");\r\n});\r\n// Typing effect\r\nlet typed = new Typed(\".type\", {\r\n  strings: [\"Makdoom Shaikh\", \"Frontend Developer\", \"Programmer\", \"Developer\"],\r\n  typeSpeed: 100,\r\n  backSpeed: 60,\r\n  loop: true,\r\n});\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}